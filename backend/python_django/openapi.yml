openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/v1/users/:
    get:
      operationId: listUsers
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    post:
      operationId: createUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/v1/users/{username}/:
    get:
      operationId: retrieveUser
      description: ''
      parameters:
      - name: username
        in: path
        required: true
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    put:
      operationId: updateUser
      description: ''
      parameters:
      - name: username
        in: path
        required: true
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateUser
      description: ''
      parameters:
      - name: username
        in: path
        required: true
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyUser
      description: ''
      parameters:
      - name: username
        in: path
        required: true
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/users/{followed_username}/followers/:
    get:
      operationId: listFollowers
      description: ''
      parameters:
      - name: followed_username
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
      tags:
      - users
  /api/v1/users/{followed_username}/followers/{username}/:
    get:
      operationId: retrieveFollowers
      description: ''
      parameters:
      - name: followed_username
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: username
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - users
  /api/v1/users/{follower_username}/following/:
    get:
      operationId: listFollowedUsers
      description: ''
      parameters:
      - name: follower_username
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
      tags:
      - users
  /api/v1/users/{follower_username}/following/{username}/:
    get:
      operationId: retrieveFollowedUsers
      description: ''
      parameters:
      - name: follower_username
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: username
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - users
    put:
      operationId: FollowUser
      description: ''
      parameters:
      - name: follower_username
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: username
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - users
    delete:
      operationId: UnFollowUser
      description: ''
      parameters:
      - name: follower_username
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: username
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - users
components:
  schemas:
    User:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
        full_name:
          type: string
          maxLength: 200
        short_name:
          type: string
          nullable: true
          maxLength: 50
        email:
          type: string
          format: email
          maxLength: 254
        bio:
          type: string
          nullable: true
        location:
          type: string
          nullable: true
          maxLength: 200
        link:
          type: string
          format: uri
          nullable: true
          maxLength: 200
          pattern: "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\\
            d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\\
            [[0-9a-f:.]+\\]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1\
            -\uFFFF0-9])?(?:\\.(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1\
            -\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\\
            s]*)?\\z"
        photo:
          type: string
          format: binary
        cover:
          type: string
          format: binary
        birth_date:
          type: string
          format: date
          nullable: true
        date_joined:
          type: string
          format: date-time
        following_url:
          type: string
          readOnly: true
        followers_url:
          type: string
          readOnly: true
      required:
      - username
      - full_name
